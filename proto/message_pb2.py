# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: message.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='message.proto',
  package='DistributeSpider',
  syntax='proto3',
  serialized_pb=_b('\n\rmessage.proto\x12\x10\x44istributeSpider\"U\n\x08Register\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12(\n\x06status\x18\x03 \x03(\x0b\x32\x18.DistributeSpider.Status\"<\n\x06Status\x12\x0e\n\x06spider\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\x0f\n\x07isalive\x18\x03 \x01(\x08\":\n\x07Request\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0e\n\x06spider\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x03\"9\n\x08Response\x12\r\n\x05\x65mpty\x18\x01 \x01(\x08\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x03\"\x19\n\x04Wait\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\"&\n\x03\x41\x63k\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\":\n\x07UrlsAck\x12\x0c\n\x04work\x18\x01 \x01(\x08\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\x0e\n\x06spider\x18\x03 \x03(\t\"\xba\x02\n\x05House\x12\r\n\x05title\x18\x01 \x01(\t\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x11\n\timage_url\x18\x03 \x01(\t\x12\x0b\n\x03lat\x18\x04 \x01(\x01\x12\x0b\n\x03lon\x18\x05 \x01(\x01\x12\x0e\n\x06rental\x18\x06 \x01(\x02\x12\x12\n\nhouse_type\x18\x07 \x01(\t\x12\x0c\n\x04\x61rea\x18\x08 \x01(\t\x12\r\n\x05\x66loor\x18\t \x01(\t\x12\x0e\n\x06\x63\x61mpus\x18\n \x01(\t\x12\x10\n\x08\x64istrict\x18\x0b \x01(\t\x12\x0c\n\x04\x63ity\x18\x0c \x01(\t\x12\x0c\n\x04\x64\x61te\x18\r \x01(\t\x12\r\n\x05rooms\x18\x0e \x01(\x07\x12\x0f\n\x07\x61\x64\x64ress\x18\x0f \x01(\t\x12\x0e\n\x06source\x18\x10 \x01(\t\x12\x0f\n\x07\x63ontact\x18\x11 \x01(\t\x12\r\n\x05phone\x18\x12 \x01(\t\x12\x0b\n\x03md5\x18\x13 \x01(\t\x12\x0c\n\x04time\x18\x14 \x01(\t2\x87\x02\n\x0cSpiderServer\x12>\n\x03req\x12\x19.DistributeSpider.Request\x1a\x1a.DistributeSpider.Response\"\x00\x12\x37\n\x04wait\x12\x16.DistributeSpider.Wait\x1a\x15.DistributeSpider.Ack\"\x00\x12\x44\n\tkeepalive\x12\x1a.DistributeSpider.Register\x1a\x19.DistributeSpider.UrlsAck\"\x00\x12\x38\n\x04save\x12\x17.DistributeSpider.House\x1a\x15.DistributeSpider.Ack\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_REGISTER = _descriptor.Descriptor(
  name='Register',
  full_name='DistributeSpider.Register',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='DistributeSpider.Register.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Register.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='DistributeSpider.Register.status', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=120,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='DistributeSpider.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='spider', full_name='DistributeSpider.Status.spider', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Status.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isalive', full_name='DistributeSpider.Status.isalive', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=182,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='DistributeSpider.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='DistributeSpider.Request.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spider', full_name='DistributeSpider.Request.spider', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Request.timestamp', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=242,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='DistributeSpider.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='empty', full_name='DistributeSpider.Response.empty', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='DistributeSpider.Response.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Response.timestamp', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=301,
)


_WAIT = _descriptor.Descriptor(
  name='Wait',
  full_name='DistributeSpider.Wait',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Wait.timestamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=328,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='DistributeSpider.Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='DistributeSpider.Ack.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.Ack.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=330,
  serialized_end=368,
)


_URLSACK = _descriptor.Descriptor(
  name='UrlsAck',
  full_name='DistributeSpider.UrlsAck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='work', full_name='DistributeSpider.UrlsAck.work', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DistributeSpider.UrlsAck.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spider', full_name='DistributeSpider.UrlsAck.spider', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=370,
  serialized_end=428,
)


_HOUSE = _descriptor.Descriptor(
  name='House',
  full_name='DistributeSpider.House',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='title', full_name='DistributeSpider.House.title', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='DistributeSpider.House.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_url', full_name='DistributeSpider.House.image_url', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lat', full_name='DistributeSpider.House.lat', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lon', full_name='DistributeSpider.House.lon', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rental', full_name='DistributeSpider.House.rental', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='house_type', full_name='DistributeSpider.House.house_type', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='area', full_name='DistributeSpider.House.area', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='floor', full_name='DistributeSpider.House.floor', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='campus', full_name='DistributeSpider.House.campus', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='district', full_name='DistributeSpider.House.district', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='city', full_name='DistributeSpider.House.city', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date', full_name='DistributeSpider.House.date', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rooms', full_name='DistributeSpider.House.rooms', index=13,
      number=14, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='DistributeSpider.House.address', index=14,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='source', full_name='DistributeSpider.House.source', index=15,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='contact', full_name='DistributeSpider.House.contact', index=16,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='phone', full_name='DistributeSpider.House.phone', index=17,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='md5', full_name='DistributeSpider.House.md5', index=18,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time', full_name='DistributeSpider.House.time', index=19,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=431,
  serialized_end=745,
)

_REGISTER.fields_by_name['status'].message_type = _STATUS
DESCRIPTOR.message_types_by_name['Register'] = _REGISTER
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Wait'] = _WAIT
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
DESCRIPTOR.message_types_by_name['UrlsAck'] = _URLSACK
DESCRIPTOR.message_types_by_name['House'] = _HOUSE

Register = _reflection.GeneratedProtocolMessageType('Register', (_message.Message,), dict(
  DESCRIPTOR = _REGISTER,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Register)
  ))
_sym_db.RegisterMessage(Register)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Status)
  ))
_sym_db.RegisterMessage(Status)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Response)
  ))
_sym_db.RegisterMessage(Response)

Wait = _reflection.GeneratedProtocolMessageType('Wait', (_message.Message,), dict(
  DESCRIPTOR = _WAIT,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Wait)
  ))
_sym_db.RegisterMessage(Wait)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.Ack)
  ))
_sym_db.RegisterMessage(Ack)

UrlsAck = _reflection.GeneratedProtocolMessageType('UrlsAck', (_message.Message,), dict(
  DESCRIPTOR = _URLSACK,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.UrlsAck)
  ))
_sym_db.RegisterMessage(UrlsAck)

House = _reflection.GeneratedProtocolMessageType('House', (_message.Message,), dict(
  DESCRIPTOR = _HOUSE,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:DistributeSpider.House)
  ))
_sym_db.RegisterMessage(House)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class SpiderServerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.req = channel.unary_unary(
          '/DistributeSpider.SpiderServer/req',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.wait = channel.unary_unary(
          '/DistributeSpider.SpiderServer/wait',
          request_serializer=Wait.SerializeToString,
          response_deserializer=Ack.FromString,
          )
      self.keepalive = channel.unary_unary(
          '/DistributeSpider.SpiderServer/keepalive',
          request_serializer=Register.SerializeToString,
          response_deserializer=UrlsAck.FromString,
          )
      self.save = channel.unary_unary(
          '/DistributeSpider.SpiderServer/save',
          request_serializer=House.SerializeToString,
          response_deserializer=Ack.FromString,
          )


  class SpiderServerServicer(object):

    def req(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def wait(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def keepalive(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def save(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SpiderServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'req': grpc.unary_unary_rpc_method_handler(
            servicer.req,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'wait': grpc.unary_unary_rpc_method_handler(
            servicer.wait,
            request_deserializer=Wait.FromString,
            response_serializer=Ack.SerializeToString,
        ),
        'keepalive': grpc.unary_unary_rpc_method_handler(
            servicer.keepalive,
            request_deserializer=Register.FromString,
            response_serializer=UrlsAck.SerializeToString,
        ),
        'save': grpc.unary_unary_rpc_method_handler(
            servicer.save,
            request_deserializer=House.FromString,
            response_serializer=Ack.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'DistributeSpider.SpiderServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSpiderServerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def req(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def wait(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def keepalive(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def save(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSpiderServerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def req(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    req.future = None
    def wait(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    wait.future = None
    def keepalive(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    keepalive.future = None
    def save(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    save.future = None


  def beta_create_SpiderServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('DistributeSpider.SpiderServer', 'keepalive'): Register.FromString,
      ('DistributeSpider.SpiderServer', 'req'): Request.FromString,
      ('DistributeSpider.SpiderServer', 'save'): House.FromString,
      ('DistributeSpider.SpiderServer', 'wait'): Wait.FromString,
    }
    response_serializers = {
      ('DistributeSpider.SpiderServer', 'keepalive'): UrlsAck.SerializeToString,
      ('DistributeSpider.SpiderServer', 'req'): Response.SerializeToString,
      ('DistributeSpider.SpiderServer', 'save'): Ack.SerializeToString,
      ('DistributeSpider.SpiderServer', 'wait'): Ack.SerializeToString,
    }
    method_implementations = {
      ('DistributeSpider.SpiderServer', 'keepalive'): face_utilities.unary_unary_inline(servicer.keepalive),
      ('DistributeSpider.SpiderServer', 'req'): face_utilities.unary_unary_inline(servicer.req),
      ('DistributeSpider.SpiderServer', 'save'): face_utilities.unary_unary_inline(servicer.save),
      ('DistributeSpider.SpiderServer', 'wait'): face_utilities.unary_unary_inline(servicer.wait),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SpiderServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('DistributeSpider.SpiderServer', 'keepalive'): Register.SerializeToString,
      ('DistributeSpider.SpiderServer', 'req'): Request.SerializeToString,
      ('DistributeSpider.SpiderServer', 'save'): House.SerializeToString,
      ('DistributeSpider.SpiderServer', 'wait'): Wait.SerializeToString,
    }
    response_deserializers = {
      ('DistributeSpider.SpiderServer', 'keepalive'): UrlsAck.FromString,
      ('DistributeSpider.SpiderServer', 'req'): Response.FromString,
      ('DistributeSpider.SpiderServer', 'save'): Ack.FromString,
      ('DistributeSpider.SpiderServer', 'wait'): Ack.FromString,
    }
    cardinalities = {
      'keepalive': cardinality.Cardinality.UNARY_UNARY,
      'req': cardinality.Cardinality.UNARY_UNARY,
      'save': cardinality.Cardinality.UNARY_UNARY,
      'wait': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'DistributeSpider.SpiderServer', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
